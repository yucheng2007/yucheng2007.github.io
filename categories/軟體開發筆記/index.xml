<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>軟體開發筆記 on JJ&#39;s Blog</title>
    <link>https://yucheng2007.github.io/categories/%E8%BB%9F%E9%AB%94%E9%96%8B%E7%99%BC%E7%AD%86%E8%A8%98/</link>
    <description>Recent content in 軟體開發筆記 on JJ&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sun, 16 Jun 2024 07:00:00 +0800</lastBuildDate><atom:link href="https://yucheng2007.github.io/categories/%E8%BB%9F%E9%AB%94%E9%96%8B%E7%99%BC%E7%AD%86%E8%A8%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用ChatGPT生成Mermaid圖表語法並在Notion中使用</title>
      <link>https://yucheng2007.github.io/blog/technotes_005/</link>
      <pubDate>Sun, 16 Jun 2024 07:00:00 +0800</pubDate>
      
      <guid>https://yucheng2007.github.io/blog/technotes_005/</guid>
      <description>利用ChatGPT生成Mermaid圖表語法並在Notion中使用 先前我個人都是利用一些網路上免費的資源，如Draw.io（教學）或是yEd（教學）繪製流程圖，另外，也有一款是透過寫程式的方式畫流程圖，對於規劃程式交握程序時，覺得相當便利的WebSequenceDiagrams，這幾套免費的線上軟體，基本上已經可以滿足多數軟體工程師工作上的需求。
而這次要介紹的Mermaid，我自己會知道也是一次無意間要畫流程圖，想說既然都有使用Notion的習慣，那當然會希望能夠找到一套結合Notion，又能滿足用程式撰寫流程圖需求的工具。
1. Mermaid簡介與優勢 Mermaid是一種基於Markdown的圖表語法工具，它使得開發者可以通過簡單的文本描述來生成複雜的圖表。這對於需要快速製作流程圖、甘特圖、序列圖等圖表的軟體工程師來說尤其實用。
使用Mermaid的優勢在於它的易用性和靈活性：不需要複雜的圖形設計工具，只需幾行代碼即可生成清晰、專業的圖表。此外，Mermaid與多種編輯器和平台兼容，如Notion、GitHub、VSCode等，這使得它在協作環境中非常便捷。
當然，個人覺得Mermaid最好用的地方在於它的線上資源相當豐富，官方網站的資料已經可以解決多數人80%的應用需求，像是Flowcharts、Sequence diagrams、Class diagrams甚至是Gantt diagrams他都有支援，是不是相當有趣。</description>
    </item>
    
    <item>
      <title>深入了解半導體設備軟體開發：關鍵技術和趨勢分析</title>
      <link>https://yucheng2007.github.io/blog/technotes_004/</link>
      <pubDate>Wed, 10 Jan 2024 07:00:00 +0800</pubDate>
      
      <guid>https://yucheng2007.github.io/blog/technotes_004/</guid>
      <description>半導體設備的概述 自己本身是從事設備業軟體開發許久，一路從面板（Panel）、太陽能（Solar Energy）、LED（Light Emitting Diode）、OLED（Organic Light Emitting Diode）到半導體（Semiconductor）設備等，在這產業算算也有10年以上的時間，覺得應該要寫一篇關於設備業軟體開發的介紹。
剛好自己從事的工作跟第三代半導體有相關，其中，第三代半導體技術涉及到更高效、更快速的半導體材料和製程技術。相比於傳統的矽基半導體，第三代半導體（如氮化鎵、碳化矽等）具有更高的電子遷移率、較高的工作溫度和更好的電子特性。這些特點使得第三代半導體在高頻、高功率和高溫應用中具有巨大的潛力，如5G通訊、電力電子、雷射二極體等。
為了實現這些先進半導體材料的製造，需要專門的製程設備和技術，其中MOCVD是一個核心技術。</description>
    </item>
    
    <item>
      <title>淺談時間複雜度與空間複雜度 Time &amp; Space Complexity</title>
      <link>https://yucheng2007.github.io/blog/technotes_003/</link>
      <pubDate>Thu, 19 Oct 2023 07:00:00 +0800</pubDate>
      
      <guid>https://yucheng2007.github.io/blog/technotes_003/</guid>
      <description>最近在刷LeetCode，剛好科普一下「時間複雜度（Time Complexity）」與「空間複雜度（Space Complexity）」。
在軟體開發和演算法設計中，我們經常需要評估演算法的效率。其中，「時間複雜度」和「空間複雜度」是兩個關鍵概念，對於評估算法性能至關重要。本篇技術分享將淺顯易懂地介紹這兩個概念，並以Python為例進行示範。
時間複雜度 Time Complexity 簡單的來說就是，電腦執行演算法所需要耗費的時間成本。
時間複雜度描述了一個算法執行所需的時間，通常以「步驟數」表示。這裡的「步驟」可以指基本操作的次數，或者是其他衡量執行效率的單位。
時間複雜度常以「大O符號」（O符號）來表示，表示最壞情況下的執行時間。以下列出幾種常見的時間複雜度：</description>
    </item>
    
    <item>
      <title>Notion 10 個我最常用的 Markdown 語法介紹</title>
      <link>https://yucheng2007.github.io/blog/technotes_002/</link>
      <pubDate>Tue, 10 Oct 2023 07:00:00 +0800</pubDate>
      
      <guid>https://yucheng2007.github.io/blog/technotes_002/</guid>
      <description>會想分享這篇Markdown語法，主要是先前使用的Trello跟目前使用的Notion都是用此語法。
而最近在嘗試自己架站(Hugo+Github)，Hugo主要是用GO語言實現的靜態網站（Static Site Generator），利用Markdown將內容跟樣式外觀完整分開，再利用生成的靜態網頁直接發佈到Server上。
網路上對於Markdown的教學很多，譬如「Markdown文件」，這裡有完整的語法介紹。而本文只著重在Notion中我自己最常用的十種Markdown元素跟大家介紹分享：
H1、H2、H3 標題（Headings） 主要分為一級標題（H1）、二級標題（H2）及三級標題（H3） 在Notion上也可以透過打：「/h1 + Enter」、「/h2 + Enter」、「/h3 + Enter」呼叫對應的標題階層。 1# 一級標題 2## 二級標題 3### 三級標題 粗體（Bold）、斜體（Italic）、底線（Underline） 主要是用於突顯重要文字或給予特殊意義時使用，除了用下面Markdown的語法，這三個算是個人最常直接用快捷鍵達成。</description>
    </item>
    
    <item>
      <title>如何在Notepad&#43;&#43;中，垂直對齊逗號分隔值？</title>
      <link>https://yucheng2007.github.io/blog/technotes_001/</link>
      <pubDate>Fri, 29 Sep 2023 07:00:00 +0800</pubDate>
      
      <guid>https://yucheng2007.github.io/blog/technotes_001/</guid>
      <description>在Excel可以透過「資料剖析」的方式將匯入的數據依據分號、逗號或空格拆解到每個欄位(Column)上，方便Raw Data的閱讀。
如果想要在Notepad++上做到一樣的效果要如果做呢？
首先，打開Notepad++，點選「外掛」→「管理外掛模組」搜尋「PythonScript」安裝。
接者，點選「New Script」，命名為「CSVtoTable.py」，將下面的Python Source Code貼上，存檔。
CSVtoTable.py
1import csv 2 3inputlines = editor.</description>
    </item>
    
  </channel>
</rss>
